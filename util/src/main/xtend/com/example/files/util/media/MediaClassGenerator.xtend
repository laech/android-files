package com.example.files.util.media

import java.io.File
import java.net.URL
import java.util.Map
import java.util.TreeMap
import org.jdom2.input.SAXBuilder

import static com.example.files.util.media.Main.*
import static com.google.common.base.Charsets.*
import static com.google.common.io.Files.*
import static java.lang.System.*
import static java.util.Locale.*

class Main {

  static val MEDIA_URL =
    new URL("http://svn.apache.org/repos/asf/tomcat/trunk/conf/web.xml")

  static val OUTPUT_FILE =
    new File(getProperty("user.home") + "/Desktop/MediaMap.java")

  def static void main(String[] args) {
    val in = MEDIA_URL.openStream
    try {

      val root = new SAXBuilder().build(in).rootElement
      val ns = root.namespace
      val medias = new TreeMap<String, String>
      val mimes = root.getChildren("mime-mapping", ns)
      mimes.forEach[mime |
        medias.put(
          mime.getChildText("extension", ns).toLowerCase(ENGLISH),
          mime.getChildText("mime-type", ns).toLowerCase(ENGLISH)
        )
      ]

      write(generate(medias), OUTPUT_FILE, UTF_8)

    } finally {
      in.close
    }
  }

  def static generate(Map<String, String> types) '''
    // This file is generated by «typeof(MediaClassGenerator).name»

    package com.example.files.media;

    import static java.util.Locale.ENGLISH;

    import java.util.Map;
    import java.util.HashMap;

    public class MediaMap {

      private static final Map<String, String> TYPES;

      static {
        TYPES = new HashMap<String, String>(«types.size + types.size / 3»);
        «FOR type : types.entrySet»
        TYPES.put("«type.key»", "«type.value»");
        «ENDFOR»
      }

      /**
       * Gets the media type for the given file extension.
       *
       * @param extension the file extension without the ".", in any case
       */
      public String get(String extension) {
        return TYPES.get(extension.toLowerCase(ENGLISH));
      }

    }
    '''

}
